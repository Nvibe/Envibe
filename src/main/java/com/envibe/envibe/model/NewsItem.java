package com.envibe.envibe.model;

import com.envibe.envibe.model.validation.constraints.ValidUsername;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.Date;

/**
 * NewsItem model that represents user posts and acts as the parent object for comments/reactions.
 * @see com.envibe.envibe.dao.NewsItemDao
 *
 * @author ARMmaster17
 */
public class NewsItem implements Serializable {

    /**
     * Unique post ID. Automatically generated by underlying database.
     */
    private int post_id;

    /**
     * Username of account that created the post.
     */
    @NotNull
    @NotEmpty
    @ValidUsername
    private String username;

    /**
     * Date and time that the post was written. Should be in UTC time and conversion happens on the frontend.
     */
    @NotNull
    private Date post_date;

    /**
     * Content of post. For now is only a generic payload. In the future could be a JSON object with locked-down and pre-validated objects.
     */
    @NotNull
    @NotEmpty
    private String content;

    /**
     * Empty constructor for user model. Consumed by Thymeleaf templates and validation engines.
     */
    public NewsItem() {

    }

    /**
     * New post constructor. Should not be used to represent existing posts, use {@link NewsItem#NewsItem(int, String, Date, String)} instead.
     * @param username Username of account that created the post.
     * @param post_date Date and time that post was created in UTC time.
     * @param content Generic payload that contains the post content.
     */
    public NewsItem(@ValidUsername String username, @NotNull Date post_date, @NotNull String content) {
        this.username = username;
        this.post_date = post_date;
        this.content = content;
    }

    /**
     * Existing post constructor. Should only be called by RowMapper() or DAO objects.
     * @param post_id Internal, auto-incrementing primary key of post.
     * @param username Username of account that created the post.
     * @param post_date Date and time that post was created in UTC time.
     * @param content Generic payload that contains the post content.
     */
    public NewsItem(@NotNull int post_id, @ValidUsername String username, @NotNull Date post_date, @NotNull String content) {
        this.post_id = post_id;
        this.username = username;
        this.post_date = post_date;
        this.content = content;
    }

    /**
     * Returns the globally-unique post id number.
     * @return post id number.
     */
    public int getPost_id() {
        return post_id;
    }

    /**
     * Sets the internal primary key for searching for the post.
     * Internal function only. Do not call. Required by JSON and ISerializable objects.
     * @param post_id New posting ID number.
     */
    public void setPost_id(int post_id) {
        this.post_id = post_id;
    }

    /**
     * Returns the username associated with the account that created the post.
     * @return Username of original poster.
     */
    public String getUsername() {
        return username;
    }

    /**
     * Sets the username associated with the account that created the post.
     * Internal function only. Do not call. Required by JSON and ISerializable objects.
     * @param username Username of original poster.
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Sets the date that the post was created at in UTC time.
     * @return Post creation time in UTC.
     */
    public Date getPost_date() {
        return post_date;
    }

    /**
     * Sets the date that the post was created at in UTC time.
     * @param post_date Post creation time in UTC.
     */
    public void setPost_date(Date post_date) {
        this.post_date = post_date;
    }

    /**
     * Returns the payload of the post. For now this is a generic text field, but in the future
     * could contain a JSON payload with a more controlled form of content.
     * @return Post content.
     */
    public String getContent() {
        return content;
    }

    /**
     * Sets the payload of the post. For now this is a generic text field, but in the future
     * could contain a JSON payload with a more controlled form of content.
     * @param content Post content.
     */
    public void setContent(String content) {
        this.content = content;
    }
}
