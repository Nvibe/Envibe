language: java
# Use the OSS implementation of Oracle Java 1.8.0.
jdk: openjdk8
# Use Ubuntu Linux 18.04 Bionic to match Heroku's environment.
os: linux
dist: bionic
# Use PostgreSQL to match Heroku's environment.
# Trying to use version 12.2 causes issues and is not worth pursuing.
services:
  - postgresql
  - redis
# Specify environment variables for database integration.
env:
  global:
    - JDBC_DATABASE_URL=jdbc:postgresql:travis_ci_test?user=postgres
    - PGPORT=5432
    - REDIS_URL=redis://localhost:6379
# For some reason, we need to re-install Maven Wrapper and set the execute bit on the .sh file.
before_install:
  - mvn -N io.takari:maven:wrapper
  - chmod +x ./mvnw
# Initialize the database and perform all necessary migrations.
before_script:
  - psql -c 'CREATE DATABASE travis_ci_test;' -U postgres
  - mvn flyway:migrate -e
# Temporary to test that all file paths are correct
after_script:
  - mvn javadoc:javadoc
# Build project into JAR file for deployment onto Heroku.
before_deploy:
  - mvn clean package
#  - mvn javadoc:javadoc
deploy:
  - provider: heroku
    # Use API method to avoid git collision issues.
    strategy: api
    app: envibe
    # Only deploy on master branch builds.
    on:
      branch: master
    # Use deploy API v2 as v1 is deprecated
    edge: true
  - provider: pages
    skip_cleanup: true
    github_token: $GITHUB_TOKEN
    keep_history: false
    local_dir: ./target/site/apidocs
    target_branch: gh-pages
    on:
      branch: master